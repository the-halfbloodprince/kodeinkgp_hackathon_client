import Head from 'next/head';
import { Button, Grid, Col } from '@mantine/core';
import Form from '../components/Form';
import OrderBook from '../components/OrderBook';
import UserPortFolio from '../components/UserPortFolio';
import Transactions from '../components/Transactions';
import Graph from '../components/Graph';
import { useSelector, useDispatch } from 'react-redux';
import PlotlyGraph from '../components/PlotlyGraph';
import { setData } from '../store/appDataSlice';
import { useEffect } from 'react';
import NavBar from '../components/NavBar';
import axios from 'axios';
import { IoNotificationsSharp as NotificationIcon } from 'react-icons/io5';
import { useState } from 'react';
import { Timestamp } from 'firebase/firestore';
import { useRouter } from 'next/router';

export default function Home() {
	const appData = useSelector((state) => state.appData);
	const dispatch = useDispatch();
    const router = useRouter();
	const [error, setError] = useState(false);

	// const setDataInStore = (data) => {
	//   // set the data
	//   console.log('Setting data')
	//   console.log(data)
	//   dispatch(() => setData(data))
	// }

	useEffect(() => {
		console.log('use effect');
		axios
			.get(`${process.env.NEXT_PUBLIC_BACKEND_URL}/get-all-data`)
			.then((res) => {
				const data = res.data;

				// // extracting the list of user names

				const userIdToName = {};

				data['user_portfolios'].forEach((user) => {
					userIdToName[user.id] = user.user_name;
				});

				data['userIdToName'] = userIdToName;

				// convert market prices to datetime
				data['market_prices'].forEach((price, idx) => {
					data['market_prices'][idx]['datetime'] = new Timestamp(
						price['datetime']['_seconds'],
						price['datetime']['_nanoseconds']
					).toDate();
				});

				// sorting the market prices
				data['market_prices'].sort(
					(price1, price2) => price1['datetime'] - price2['datetime']
				);

				// getting the current market price
				const x = data['market_prices'].at(-1);
				data['current_market_price'] = x['price'];

				// convert transaction to datetime
				data['transactions'].forEach((trans, idx) => {
					data['transactions'][idx]['datetime'] = new Timestamp(
						trans['datetime']['_seconds'],
						trans['datetime']['_nanoseconds']
					).toDate();
				});

				// sorting the market prices
				data['transactions'].sort(
					(trans1, trans2) => -(trans1['datetime'] - trans2['datetime'])
				);

				dispatch(setData(data));
			});
	}, []);

	console.log('njk');
	console.log(appData);
	return (
		<div className="">
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main className="min-h-screen">
				{/* <NavBar /> */}

				<Grid className="">
					{/* <Col span={6}>
            
          </Col>
          <Col span={3} className="flex justify-end mt-4">

          <Transactions name="Transactions" />
          </Col>
          <Col span={3} className="flex justify-start mt-4">

            <Transactions name="Notifications" />
          </Col> */}
					<Col span={6} className="flex justify-end h-2/5">
						<Graph />
					</Col>

					<Col
						span={6}
						className="flex justify-start h-2/5"
						onClick={(e) => {
							e.preventDefault();
							router.push('/orders');
						}}
					>
						<OrderBook />
					</Col>
					<Col
						span={6}
						className="flex justify-end h-2/5"
						onClick={(e) => {
							e.preventDefault();
							router.push('/userportfolio');
						}}
					>
						<UserPortFolio />
					</Col>
					<Col span={6} className="flex justify-start h-2/5">
						<Form></Form>
					</Col>
				</Grid>
			</main>
		</div>
	);
}
